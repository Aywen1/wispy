buildscript {

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {

    }
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "GameTest"
        gdxVersion = '1.12.0'
        roboVMVersion = '2.3.19'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
        shapedrawerVersion = '2.5.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
        maven {
            name = "meteor-maven"
            url = "https://maven.meteordev.org/releases"
        }
    }
}

project(":desktop")
{
    apply plugin: "java-library"

    dependencies
    {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx-controllers:gdx-controllers-desktop:$gdxControllersVersion"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    }
}

project(":core") {
    apply plugin: "java-library"


    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx-controllers:gdx-controllers-core:$gdxControllersVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        api "com.kotcrab.vis:vis-ui:1.4.11"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        api "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"
        implementation 'org.reflections:reflections:0.10.2'
        implementation "meteordevelopment:starscript:0.2.2"
        implementation "meteordevelopment:orbit:0.2.3"
        implementation 'org.json:json:20230227'

        annotationProcessor 'org.projectlombok:lombok:1.18.28'
        implementation 'org.projectlombok:lombok:1.18.28'
    }
}

def getDate() {
    return new Date().format('dd-MM-yyyy-HH-mm-ss')
}

String getGitHash() {
    // git hash
    def command = Runtime.getRuntime().exec("git rev-parse --short HEAD")
    def result = command.waitFor()
    if (result != 0) {
        return "0000000"
    }

    String gitCommitHash = command.inputStream.text.trim()

    println("getGitHash() : " + gitCommitHash)

    return gitCommitHash
}

tasks.register('Build and run', Exec) {
    workingDir './'

    commandLine './run.sh'
}